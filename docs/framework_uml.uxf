<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>vxta</help_text><element><id>Relation</id><coordinates><x>716</x><y>120</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>230</y><w>160</w><h>150</h></coordinates><panel_attributes>vx_WindowDescriptor
--
Used to configure a
vx_Window.
Contains a pointer to a
context initialization
function.
And Pointers to the user's
functions to provide the
logic to the windows.</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>250</y><w>70</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
</panel_attributes><additional_attributes>50;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>230</y><w>150</w><h>140</h></coordinates><panel_attributes>/Context Initialization/
/Function/
--
Initializes the graphics
context, so graphics APIs
can be used.
--
/implemetations:/
/vx_context_load_sokol()/
/vx_context_load_opengl()/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>330</x><y>260</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>50;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>100</y><w>550</w><h>30</h></coordinates><panel_attributes>lt=.
GLFW
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>100</y><w>250</w><h>30</h></coordinates><panel_attributes>lt=.
SOKOL
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>60</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=.
OPENGL
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>270</x><y>60</y><w>80</w><h>30</h></coordinates><panel_attributes>lt=.
DIRECTX</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>60</y><w>80</w><h>30</h></coordinates><panel_attributes>lt=.
METAL
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>120</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>300</x><y>120</y><w>190</w><h>130</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>170;10;170;90;10;90;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>60</y><w>170</w><h>30</h></coordinates><panel_attributes>lt=.
WIN32API (WINDOWS)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>630</x><y>60</y><w>190</w><h>30</h></coordinates><panel_attributes>lt=.
X11 / WAYLAND (LINUX)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>830</x><y>60</y><w>170</w><h>30</h></coordinates><panel_attributes>lt=.
COCOA (MACOS)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>420</y><w>160</w><h>190</h></coordinates><panel_attributes>/User Data and/
/Functions/
--
Holds pointers to the user's
data and functions.
--
/Contains:/
/user_data: vx_UserDataPtr/
/init_fn: VX_CALLBACK/
/logic_fn: VX_CALLBACK/
/draw_fn: VX_CALLBACK/
/resize_fn: VX_CALLBACK/
/close_fn: VX_CALLBACK/</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>370</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;50;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>290</y><w>70</w><h>190</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>50;10;20;10;20;170;10;170</additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>420</y><w>150</w><h>60</h></coordinates><panel_attributes>vx_UserDataPtr
--
Holds a pointer to User
data.</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>330</x><y>430</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>780</x><y>230</y><w>160</w><h>110</h></coordinates><panel_attributes>vx_InputHelper
--
An helper struct that provides
an easy method to use a
window's inputs.
Needs to be updated by a
vx_Window.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>580</x><y>230</y><w>160</w><h>150</h></coordinates><panel_attributes>*vx_Window*
--
Interfaces with GLFW to 
open a window and create 
a game loop.
Updates vx_InputHelper to
provide input information to
the user.
Runs the user's functions.
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>730</x><y>260</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>20</y><w>250</w><h>30</h></coordinates><panel_attributes>lt=.
/GPU/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>930</x><y>260</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;50;10</additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>280</y><w>270</w><h>220</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>10;200;230;200;230;10;250;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>780</x><y>420</y><w>160</w><h>120</h></coordinates><panel_attributes>vx_WindowControl
--
Provides an interface with a
vx_Window, so the window
can be safely controlled.
It is still however possible to 
accessthe vx_Window and 
even the GLFW window.</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>650</x><y>370</y><w>230</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40;210;40;210;50</additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>490</y><w>270</w><h>30</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>10;10;250;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>980</x><y>310</y><w>150</w><h>110</h></coordinates><panel_attributes>/Nuklear input helping/
/functions/
--
These functions use the
vx_InputHelper to 
provide input information
to Nuklear</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>980</x><y>230</y><w>150</w><h>60</h></coordinates><panel_attributes>vx_KeyState
--
Stores a state of a button
or a key.</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>930</x><y>280</y><w>70</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;30;10;30;70;50;70</additional_attributes></element><element><id>Relation</id><coordinates><x>940</x><y>120</y><w>60</w><h>140</h></coordinates><panel_attributes>lt=&lt;.&gt;
</panel_attributes><additional_attributes>10;10;10;120;40;120</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1010</x><y>100</y><w>120</w><h>30</h></coordinates><panel_attributes>lt=.
NUKLEAR
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>960</x><y>120</y><w>130</w><h>220</h></coordinates><panel_attributes>lt=&lt;.&gt;
</panel_attributes><additional_attributes>110;10;110;60;10;60;10;200;20;200</additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>200</y><w>970</w><h>420</h></coordinates><panel_attributes>lt=.
_*FIRST LAYER*_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>580</x><y>690</y><w>160</w><h>140</h></coordinates><panel_attributes>*vx_StateManager*
--
This struct interfaces with a
vx_Window, overriding the
user functions, providing a
state manager.
--
It holds per-state data and
behaviours and a global
state.</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>590</x><y>370</y><w>30</w><h>340</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;320</additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>590</y><w>70</w><h>130</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;30;10;30;110;50;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>693</y><w>160</w><h>140</h></coordinates><panel_attributes>vx_StateManagerDescriptor
--
Used to configure a
vx_StateManager.
Contains a pointer to the
global state data and some
user functions.</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>730</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>878</y><w>160</w><h>120</h></coordinates><panel_attributes>/Global State and Global/
/Functions/
--
/Contains:/
/global_state: vx_UserDataPtr/
/init_fn: VX_CALLBACK()/
/state_change_fn: VX_CALLBACK()/
/close_fn: VX_CALLBACK()/</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>430</y><w>60</w><h>500</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>40;480;10;480;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>822</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>770</x><y>690</y><w>160</w><h>200</h></coordinates><panel_attributes>vx_State
--
Used internally in the state
manager. It is used to hold
state data and state 
functions.
--
Consider a state like a
particular mode of an
application / game.
For example a state could
be a Menu or a Game Scene.
--
It is a substitute of the User
functions in a vx_Window.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>970</x><y>840</y><w>160</w><h>150</h></coordinates><panel_attributes>/Per-state Data and/
/Functions/
--
/Contains:/
/state_data: vx_UserDataPtr/
/init_fn: VX_CALLBACK/
/logic_fn: VX_CALLBACK/
/draw_fn: VX_CALLBACK/
/resize_fn: VX_CALLBACK/
/close_fn: VX_CALLBACK/</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>920</x><y>710</y><w>70</w><h>200</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;30;10;30;180;50;180</additional_attributes></element><element><id>Relation</id><coordinates><x>730</x><y>730</y><w>60</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element><element><id>Relation</id><coordinates><x>910</x><y>530</y><w>80</w><h>390</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;10;30;30;30;30;370;60;370</additional_attributes></element><element><id>Relation</id><coordinates><x>910</x><y>330</y><w>80</w><h>570</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;10;40;50;40;50;550;60;550</additional_attributes></element><element><id>UMLClass</id><coordinates><x>970</x><y>686</y><w>160</w><h>80</h></coordinates><panel_attributes>vx_StateDescriptor
--
Used to configure a vx_State.
Determines its data, ID and
behaviour.</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1040</x><y>760</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>654</y><w>970</w><h>360</h></coordinates><panel_attributes>lt=.
_*SECOND LAYER*_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>670</x><y>1071</y><w>480</w><h>170</h></coordinates><panel_attributes>lt=.
*_USER APPLICATION_*
--
/Contains:/
/-Library initialization/
/-State and global data (may be allocated on the heap or the stack)/
/-State and global functions (behaviour)/</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>925</y><w>270</w><h>160</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>250;10;10;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>925</y><w>180</w><h>160</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>10;10;160;10;160;140</additional_attributes></element><element><id>Relation</id><coordinates><x>700</x><y>825</y><w>30</w><h>260</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>10;10;10;240</additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>1095</y><w>420</w><h>40</h></coordinates><panel_attributes>vx_Camera
--
An optional struct that helps to calculate perspective and orthographic views.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>1066</y><w>440</w><h>90</h></coordinates><panel_attributes>lt=.
*_GFX MODULE_*</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>610</x><y>1095</y><w>80</w><h>30</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>60;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>1167</y><w>440</w><h>70</h></coordinates><panel_attributes>lt=.
*_LOGIC MODULE_*
--
/This module is work in progress. Look at the documentation for more Info./</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>610</x><y>1195</y><w>80</w><h>30</h></coordinates><panel_attributes>lt=&lt;.&gt;</panel_attributes><additional_attributes>60;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>170</x><y>170</y><w>990</w><h>860</h></coordinates><panel_attributes>lt=.
*_OS MODULE_*</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>0</y><w>960</w><h>140</h></coordinates><panel_attributes>lt=.
*_LIBRARIES_*
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>170</y><w>70</w><h>1070</h></coordinates><panel_attributes>lt=.

*_VX_UTILS_*</panel_attributes><additional_attributes></additional_attributes></element></diagram>